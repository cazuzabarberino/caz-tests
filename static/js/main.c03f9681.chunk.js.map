{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","error","setError","haveFile","setHaveFile","inputRef","useRef","imageRef","handleUpload","useCallback","e","uploadedFile","target","files","file","validFormats","i","length","type","includes","isImageValid","current","hidden","src","URL","createObjectURL","handleButtonClick","click","handleTrashButton","value","onChange","name","accept","ref","onClick","style","width","fontSize","padding","color","position","top","right","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAwGeA,MA1Ff,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,iBAAyB,MACpCC,EAAWD,iBAAyB,MAEpCE,EAAeC,uBAAY,SAACC,GAA4C,IAAD,EACrEC,EAAY,UAAGD,EAAEE,OAAOC,aAAZ,aAAG,EAAiB,GACjCF,GArBY,SAACG,GAGpB,IAFA,IAAMC,EAAe,CAAC,MAAO,OAAQ,OAE5BC,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IACvC,GAAIF,EAAKI,KAAKC,SAASJ,EAAaC,IAClC,OAAO,EAIX,OAAO,EAYiBI,CAAaT,IAK/BJ,EAASc,UACXd,EAASc,QAAQC,QAAS,EAC1Bf,EAASc,QAAQE,IAAMC,IAAIC,gBAAgBd,IAG7CT,EAAS,IACTE,GAAY,IAVVF,EAAS,oBAWV,IAEGwB,EAAoBjB,uBAAY,WAAO,IAAD,EAC1C,UAAAJ,EAASgB,eAAT,SAAkBM,UACjB,IAEGC,EAAoBnB,uBAAY,WAChCF,EAASc,UACXd,EAASc,QAAQE,IAAM,IACvBhB,EAASc,QAAQC,QAAS,GAGxBjB,EAASgB,UACXhB,EAASgB,QAAQQ,MAAQ,IAG3BzB,GAAY,KACX,IAEH,OACE,qCACE,uCACA,uBACE0B,SAAUtB,EACVU,KAAK,OACLa,KAAK,QACLC,OAAO,UACPC,IAAK5B,IAGP,wBACE6B,QAASR,EACTS,MAAO,CACLC,MAAO,OACPC,SAAU,OACVC,QAAS,OALb,yBAUCrC,GAAS,mBAAGkC,MAAO,CAAEI,MAAO,OAAnB,SAA6BtC,IACvC,sBAAKkC,MAAO,CAAEC,MAAO,OAAQI,SAAU,YAAvC,UACGrC,GACC,wBACE+B,QAASN,EACTO,MAAO,CACLK,SAAU,WACVC,IAAK,EACLC,MAAO,EACPL,SAAU,OACVC,QAAS,OAPb,qBAaF,qBACEhB,QAAM,EACNqB,IAAI,gBACJV,IAAK1B,EACL4B,MAAO,CACLC,MAAO,iBC5FnBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c03f9681.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\n\nconst isImageValid = (file: File): boolean => {\n  const validFormats = [\"jpg\", \"jpeg\", \"png\"];\n\n  for (let i = 0; i < validFormats.length; i++) {\n    if (file.type.includes(validFormats[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction App() {\n  const [error, setError] = useState(\"\");\n  const [haveFile, setHaveFile] = useState(false);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  const handleUpload = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const uploadedFile = e.target.files?.[0];\n    if (!uploadedFile || !isImageValid(uploadedFile)) {\n      setError(\"Invalid Format\");\n      return;\n    }\n\n    if (imageRef.current) {\n      imageRef.current.hidden = false;\n      imageRef.current.src = URL.createObjectURL(uploadedFile);\n    }\n\n    setError(\"\");\n    setHaveFile(true);\n  }, []);\n\n  const handleButtonClick = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  const handleTrashButton = useCallback(() => {\n    if (imageRef.current) {\n      imageRef.current.src = \"#\";\n      imageRef.current.hidden = true;\n    }\n\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n\n    setHaveFile(false);\n  }, []);\n\n  return (\n    <>\n      <div>0.05</div>\n      <input\n        onChange={handleUpload}\n        type=\"file\"\n        name=\"image\"\n        accept=\"image/*\"\n        ref={inputRef}\n      \n      />\n      <button\n        onClick={handleButtonClick}\n        style={{\n          width: \"100%\",\n          fontSize: \"16px\",\n          padding: \"5px\",\n        }}\n      >\n        Upload File\n      </button>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <div style={{ width: \"100%\", position: \"relative\" }}>\n        {haveFile && (\n          <button\n            onClick={handleTrashButton}\n            style={{\n              position: \"absolute\",\n              top: 0,\n              right: 0,\n              fontSize: \"16px\",\n              padding: \"5px\",\n            }}\n          >\n            excluir\n          </button>\n        )}\n        <img\n          hidden\n          alt=\"uploaded file\"\n          ref={imageRef}\n          style={{\n            width: \"100%\",\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}